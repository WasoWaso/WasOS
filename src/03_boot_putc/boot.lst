     1                                  ;boot()
     2                                  ORG     0x7c00                                          ;
     3                                  
     4                                  Entry:
     5 00000000 EB58                            jmp     IPL                                     ; IPLラベルへ移動
     6                                  BPB:
     7                                          BOOT_LOAD       equ         0x7c00              ; BOOT_LOAD=0x7c00
     8                                  
     9 00000002 90                              nop                                             ;
    10                                          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    11                                          ; BPB( BIOS Parameter Block )
    12                                          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    13                                  
    14 00000003 90<rept>                        timES  90 - ( $ - $$ ) db 0x90                  ; BPB領域を確保
    15                                  IPL:
    16 0000005A FA                              cli                                             ; 割り込み禁止
    17                                  
    18 0000005B B80000                          mov     ax , 0x0000                             ; AX=0x0000
    19 0000005E 8ED8                            mov     ds , ax                                 ; DS=0x0000
    20 00000060 8EC0                            mov     es , ax                                 ; ES=0x0000
    21 00000062 8ED0                            mov     ss , ax                                 ; SS=0x0000
    22 00000064 BC007C                          mov     sp , BOOT_LOAD                          ; SP=0x7c00
    23                                  
    24 00000067 FB                              sti                                             ; 割り込み許可
    25                                  
    26 00000068 8816[7800]                      mov     [BOOT.DRIVE] , dl                       ;
    27                                  
    28 0000006C B40E                            mov     ah , 0x0E                               ; 文字を表示
    29 0000006E BB0000                          mov     bx , 0x0000                             ;
    30 00000071 B041                            mov     al , 'A'                                ;
    31 00000073 CD10                            int     0x10                                    ;
    32                                  
    33 00000075 EBFE                            jmp     $                                       ; 処理の終了
    34                                  
    35 00000077 00                              align       2       , db 0                      ;
    36                                  BOOT:
    37                                          .DRIVE:
    38 00000078 0000                                dw      0x0000                              ;
    39                                  
    40                                  
    41                                          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    42                                          ; IPL( Initial Program Loader )
    43                                          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    44 0000007A 00<rept>                        times 510 - ($ - $$) db 0x00                    ; IPL領域を浸す
    45 000001FE 55AA                            db      0x55 , 0xAA                      ;       ; 0x55 0xAA
    46                                  
    47                                  
    48                                  ;(関数の概要(ブートプログラムです))
    49                                  ; 1. ORGディレクティブ命令でプログラムのロードアドレス指定を行います
    50                                  ; 2. BPBはOSが活用するデータの集合領域ですので早速IPL（初期化プログラム）へ移動します
    51                                  ; 3. 後にspに書き込む値(0x7c00)をBPB領域にequで定数として書き込んでおきました
    52                                  ; 4. かっこいいのでnop書いておきました
    53                                  ; 5. 今回はBPB領域を90バイトとし90バイト目までtimes疑似操作で0x90つまりnopで浸します(BPB
    54                                  ;    領域を実行してもシステムを暴走させないため)
    55                                  ; 6. 後にレジスタの設定や割り込み込みの設定も施すのでそのときに割り込みをされてしまうと困るので
    56                                  ;    cliでIFフラグを0にします
    57                                  ; 7. セグメントレジスタへの転送では即値を指定しないでレジスタを介して各セグメントレジスタに値を
    58                                  ;    書き込みます、AXに0を書き込んだらDS,ES,SSにAXレジスタの値を転送します、スタック領域は
    59                                  ;    ブートプログラムの真上に配置したいので先ほど設定したBOOT_LOAD (0x7x00)を付随します
    60                                  ; 8. 一通り設定を施したのでstiでIFフラグを1にします
    61                                  ; 9. BIOSがDLレジスタにドライブ番号を書き込んでくれるのでその値をメモリに保存しておきます
    62                                  ; 10. テレタイプ一文字出力は、AHに0x0E , ALに文字コード , BHにページ番号 , BLに文字色(ビデ
    63                                  ;     オモード時のみ) です、ページ番号でいくつかのデータを固有に作れるらしい、
    64                                  ; 11. jmp -2 を繰り返して繰り返しを施します
    65                                  ; 11. 次に値を保存するための領域を作るので、アライメントを2バイトで合わせます,nopで浸しときます
    66                                  ; 12. 新たなグローバルラベルの中にローカルラベルで値を保存するための領域(さっきのDLレジスタの値
    67                                  ;    をほぞんするための領域)を2バイト空けておきます
    68                                  ; 13. ブートプログラムは５１２バイトに収めることをしたいので一先ず５１０バイト目まで0で浸します
    69                                  ; 14. 最後にブートフラグ、0x55と0xAAを書き込んでブートプログラムの完成です
