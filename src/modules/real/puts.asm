;puts(str)
puts:
        push    bp                                      ; スタックフレームを構築
        mov     bp , sp                                 ;

        push    ax                                      ; 各レジスタの退避
        push    bx                                      ;
        push    si                                      ;
        pushf                                           ;

        mov     si , [bp + 4]                           ; 第一引数へアクセス
        mov     ah , 0x0E                               ; AH=0x0E
        mov     bx , 0x0000                             ; BX=0x0000
        cld                                             ; DF=0

.10L:                                                   ; do{
        lodsb                                           ; AL = *SI++;

        cmp     al , 0                                  ; if(0 == AL)
        je      .10E                                    ; break;

        int     0x10                                    ; Int10(0x0E,AL)//文字出力

        jmp     .10L                                    ; while (1);
.10E:

        popf                                            ; 各レジスタの復帰
        pop     si                                      ;
        pop     bx                                      ;
        pop     ax                                      ;

        mov     sp , bp                                 ; スタックフレームの破棄
        pop     bp                                      ;

        ret                                             ; もとの処へ

;(関数の概要(文字列を表示する関数です))
; 1. スタックフレームを構築します
; 2. 各レジスタを退避します
; 3. SIレジスタには後ほど利用する値を、AHレジスタに0x0EをBXレジスタには0をBIOSコールに備えて
;    書き込んでおきます
; 3. ストリング命令に備えてDFフラグを０を書き込みます
; 4. 先に引数の転送元をSIレジスタに書き込んだので転送元(メモリ)から転送先(ALレジスタ)へ値をを
;    転送します、この時にDIレジスタの値がインクリメントされます、
; 5. もしALレジスタに0が入ったら関数の終了アドレスへ移動します
; 6. そしたらALレジスタにはきっとASCII文字が書かれているので0x10番でBIOSコールをし表示します
; 7. .10Eのアドレスへ移動してALレジスタに0が入るまで文字を表示して結果的に文字列が表示できます
; 8. 各レジスタ復帰します
; 9. スッタックフレームを取り除いて
;10. 呼び出し元のアドレスまで移動します
