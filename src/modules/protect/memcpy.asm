;memcpy(dst,src,size)
memcpy:
        push    ebp                 ; スタックフレームの構築
        mov     ebp, esp            ;

        push    esi                 ; 各レジスタの退避
        push    edi                 ;
        push    ecx                 ;

        mov     edi, [ebp+ 8]       ; 第一引数にアクセス
        mov     esi, [ebp+12]       ; 第二引数にアクセス
        mov     ecx, [ebp+16]       ; 第三引数にアクセス

        cld                         ; DF=0
        rep movsb                   ; 転送

        pop     ecx                 ; 各レジスタの復帰
        pop     edi                 ;
        pop     esi                 ;

        mov     esp, ebp            ; スタックフレームの破棄
        pop     ebp                 ;

        ret                         ; 関数の終了

;　(関数の概要())
;　1.まずはスタックフレームを構築して引数のアクセスに備えます
;　2.お邪魔することになるレジスタたちを退避させて
;　3.movsb命令に備えて引数としてもらった設定値を各レジスタに書き込む
;　4.cld命令でDFフラグを0として書き込む (1にしたい場合はstd命令を)
;　5.movsb命令は ESIに転送元 EDIに転送先 として転送元アドレスから転送先アドレスへ1バイトずつ値
;　　を書き込む ただしこの場合一回しか転送が行われない、そこでrepプレフィックスを付け足してやって
;　　指定された回数分転送を行う このときECXレジスタにその回数を指定する またDFフラグが0の時はアドレスを
;　　加算(+方向に)、反対にDFフラグが0の時はアドレスを減算(-方向に)していきながら値を書き込むことになる
;　6.お邪魔したレジスタたちを復帰させて
;　7.そしてスタックフレームを破棄します
;　8.もとの処理に戻してあげる
