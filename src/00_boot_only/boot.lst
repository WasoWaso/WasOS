     1                                  	;***************************************************
     2                                  	;//何もしないブートプログラム
     3                                  	;***************************************************
     4 00000000 EBFE                    	jmp $					;while(1);//長調ループ
     5 00000002 00<rept>                	times 510 - ($ - $$) db 0x00
     6 000001FE 55AA                    	db 0x55,0xAA
     7                                  
     8                                  	;(関数の概要())
     9                                  	; 1.名前通り何もしないブートプログラムなのですごくすごくすごくすごくすごく長いループを作って
    10                                  	;		やります、「jmp $ 」の$の意味は今実行しているアドレスです、実際にアセンブルするとEBEF
    11                                  	;		というマシン語が出来上がりますEBはjmp命令でEFとはいうと２進数で11111110つまり１０進数
    12                                  	;		でー２を表しています、どうやらjmp命令にはこのようなアドレス指定もできるらしくて？だからIPレ
    13                                  	;		ジスタの値も-２されるわけで同じアドレスのjmp命令を繰り返すことになり結果的にループができ
    14                                  	;		あがります、2バイトの命令です
    15                                  	; 2.BIOSによって最初にメモリに展開されるプログラムは512バイで+終端2バイトが0x55,0xAAである
    16                                  	;   必要があるので必要に応じて0を書き込むnasmの疑似命令です,times疑似命令は指定された回数分、
    17                                  	;　　後続の命令を繰り返します、今回の例では (510回 - 命令バイト分) で１バイトずつ0で埋めるこ
    18                                  	;		とで合計512ばいとのでーたをつくります、510 - ($ - $$) の意味としては,$は現在の実行番地
    19                                  	;		$$はセクションの一番先頭です、セクションの一番先頭というのは(ここから勝手なので注意)ですね
    20                                  	;		例として今このテキストファイルに書いているコード以外に変数や関数が存在する場合アセンブルを
    21                                  	;		行うときに必然的に出力されるバイナリデータも変わってきますよね、なので$が指し示すアドレス
    22                                  	;		も変わります、$はアセンブルした時に決定する値であって実際にアセンブルした時に結果を得ること
    23                                  	;		ができます、つまりソースコードのアレコレで変わる'不定値'ということです、それでは510 - $
    24                                  	; 	として引数を渡したらどうなるのかというと、error: non-constant argument supplied to
    25                                  	;   TIMES というエラーを伝えてきます、結果から言うとtimes疑似命令には'定数'を引数として渡し
    26                                  	;		てやる必要があります、今回の510 - $ の場合こちらは不定値になります「どこから数えればいいの
    27                                  	;		！？」「変数とか関数は含めるの？？」みたいな感じかな？そこで活用するのが$$です、さっきの
    28                                  	;		通りに$$の意味はセクションの先頭、つまりここに書いているソースコードの先頭です、「セクション
    29                                  	;		の始から**番目だよ」って感じかな、これでどこのアドレスかはっきりしました、このセクションの
    30                                  	;		先頭から初めて3バイト目、だと思います、これで定数を要求するtimes疑似命令に応えられました
    31                                  	;		ポイントはセクション同士の結合で現在のアドレス(ローケーションカウンタ)が変わりうるということ
    32                                  	;		です、ですので$$というセクションの開始位置という情報を付随してやることでtimes疑似命令が期待
    33                                  	;		した値をつくりだす、ということだと思います、セクション(SECTION)を参考にしました
    34                                  	; 3.二バイトずつ値を書き込みます、今回の場合は１６進数で55とAAで、つまり終端2バイトのブートフラグです
